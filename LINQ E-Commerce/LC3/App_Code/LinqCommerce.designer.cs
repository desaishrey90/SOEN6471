#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BalloonShop")]
public partial class LinqCommerceDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertlc_BillingInfoTable(lc_BillingInfoTable instance);
  partial void Updatelc_BillingInfoTable(lc_BillingInfoTable instance);
  partial void Deletelc_BillingInfoTable(lc_BillingInfoTable instance);
  partial void Insertlc_WishList(lc_WishList instance);
  partial void Updatelc_WishList(lc_WishList instance);
  partial void Deletelc_WishList(lc_WishList instance);
  partial void Insertlc_Category(lc_Category instance);
  partial void Updatelc_Category(lc_Category instance);
  partial void Deletelc_Category(lc_Category instance);
  partial void Insertlc_ColorTable(lc_ColorTable instance);
  partial void Updatelc_ColorTable(lc_ColorTable instance);
  partial void Deletelc_ColorTable(lc_ColorTable instance);
  partial void Insertlc_CouponTable(lc_CouponTable instance);
  partial void Updatelc_CouponTable(lc_CouponTable instance);
  partial void Deletelc_CouponTable(lc_CouponTable instance);
  partial void Insertlc_Department(lc_Department instance);
  partial void Updatelc_Department(lc_Department instance);
  partial void Deletelc_Department(lc_Department instance);
  partial void Insertlc_OrderDetail(lc_OrderDetail instance);
  partial void Updatelc_OrderDetail(lc_OrderDetail instance);
  partial void Deletelc_OrderDetail(lc_OrderDetail instance);
  partial void Insertlc_Order(lc_Order instance);
  partial void Updatelc_Order(lc_Order instance);
  partial void Deletelc_Order(lc_Order instance);
  partial void Insertlc_Product(lc_Product instance);
  partial void Updatelc_Product(lc_Product instance);
  partial void Deletelc_Product(lc_Product instance);
  partial void Insertlc_ProductCategory(lc_ProductCategory instance);
  partial void Updatelc_ProductCategory(lc_ProductCategory instance);
  partial void Deletelc_ProductCategory(lc_ProductCategory instance);
  partial void Insertlc_ProductImage(lc_ProductImage instance);
  partial void Updatelc_ProductImage(lc_ProductImage instance);
  partial void Deletelc_ProductImage(lc_ProductImage instance);
  partial void Insertlc_ProductInventory(lc_ProductInventory instance);
  partial void Updatelc_ProductInventory(lc_ProductInventory instance);
  partial void Deletelc_ProductInventory(lc_ProductInventory instance);
  partial void Insertlc_Recommendation(lc_Recommendation instance);
  partial void Updatelc_Recommendation(lc_Recommendation instance);
  partial void Deletelc_Recommendation(lc_Recommendation instance);
  partial void Insertlc_RegionShippingTable(lc_RegionShippingTable instance);
  partial void Updatelc_RegionShippingTable(lc_RegionShippingTable instance);
  partial void Deletelc_RegionShippingTable(lc_RegionShippingTable instance);
  partial void Insertlc_SellerTable(lc_SellerTable instance);
  partial void Updatelc_SellerTable(lc_SellerTable instance);
  partial void Deletelc_SellerTable(lc_SellerTable instance);
  partial void Insertlc_ShippingInfoTable(lc_ShippingInfoTable instance);
  partial void Updatelc_ShippingInfoTable(lc_ShippingInfoTable instance);
  partial void Deletelc_ShippingInfoTable(lc_ShippingInfoTable instance);
  partial void Insertlc_ShippingRegion(lc_ShippingRegion instance);
  partial void Updatelc_ShippingRegion(lc_ShippingRegion instance);
  partial void Deletelc_ShippingRegion(lc_ShippingRegion instance);
  partial void Insertlc_SizeTable(lc_SizeTable instance);
  partial void Updatelc_SizeTable(lc_SizeTable instance);
  partial void Deletelc_SizeTable(lc_SizeTable instance);
  partial void Insertlc_StateTaxTable(lc_StateTaxTable instance);
  partial void Updatelc_StateTaxTable(lc_StateTaxTable instance);
  partial void Deletelc_StateTaxTable(lc_StateTaxTable instance);
  partial void Insertlc_DigitalProduct(lc_DigitalProduct instance);
  partial void Updatelc_DigitalProduct(lc_DigitalProduct instance);
  partial void Deletelc_DigitalProduct(lc_DigitalProduct instance);
  partial void Insertlc_Country(lc_Country instance);
  partial void Updatelc_Country(lc_Country instance);
  partial void Deletelc_Country(lc_Country instance);
  partial void Insertlc_State(lc_State instance);
  partial void Updatelc_State(lc_State instance);
  partial void Deletelc_State(lc_State instance);
  partial void Insertlc_ShoppingCart(lc_ShoppingCart instance);
  partial void Updatelc_ShoppingCart(lc_ShoppingCart instance);
  partial void Deletelc_ShoppingCart(lc_ShoppingCart instance);
  #endregion
	
	public LinqCommerceDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BalloonShopConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public LinqCommerceDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LinqCommerceDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LinqCommerceDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LinqCommerceDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<lc_BillingInfoTable> lc_BillingInfoTables
	{
		get
		{
			return this.GetTable<lc_BillingInfoTable>();
		}
	}
	
	public System.Data.Linq.Table<lc_WishList> lc_WishLists
	{
		get
		{
			return this.GetTable<lc_WishList>();
		}
	}
	
	public System.Data.Linq.Table<lc_Category> lc_Categories
	{
		get
		{
			return this.GetTable<lc_Category>();
		}
	}
	
	public System.Data.Linq.Table<lc_ColorTable> lc_ColorTables
	{
		get
		{
			return this.GetTable<lc_ColorTable>();
		}
	}
	
	public System.Data.Linq.Table<lc_CouponTable> lc_CouponTables
	{
		get
		{
			return this.GetTable<lc_CouponTable>();
		}
	}
	
	public System.Data.Linq.Table<lc_Department> lc_Departments
	{
		get
		{
			return this.GetTable<lc_Department>();
		}
	}
	
	public System.Data.Linq.Table<lc_OrderDetail> lc_OrderDetails
	{
		get
		{
			return this.GetTable<lc_OrderDetail>();
		}
	}
	
	public System.Data.Linq.Table<lc_Order> lc_Orders
	{
		get
		{
			return this.GetTable<lc_Order>();
		}
	}
	
	public System.Data.Linq.Table<lc_Product> lc_Products
	{
		get
		{
			return this.GetTable<lc_Product>();
		}
	}
	
	public System.Data.Linq.Table<lc_ProductCategory> lc_ProductCategories
	{
		get
		{
			return this.GetTable<lc_ProductCategory>();
		}
	}
	
	public System.Data.Linq.Table<lc_ProductImage> lc_ProductImages
	{
		get
		{
			return this.GetTable<lc_ProductImage>();
		}
	}
	
	public System.Data.Linq.Table<lc_ProductInventory> lc_ProductInventories
	{
		get
		{
			return this.GetTable<lc_ProductInventory>();
		}
	}
	
	public System.Data.Linq.Table<lc_Recommendation> lc_Recommendations
	{
		get
		{
			return this.GetTable<lc_Recommendation>();
		}
	}
	
	public System.Data.Linq.Table<lc_RegionShippingTable> lc_RegionShippingTables
	{
		get
		{
			return this.GetTable<lc_RegionShippingTable>();
		}
	}
	
	public System.Data.Linq.Table<lc_SellerTable> lc_SellerTables
	{
		get
		{
			return this.GetTable<lc_SellerTable>();
		}
	}
	
	public System.Data.Linq.Table<lc_ShippingInfoTable> lc_ShippingInfoTables
	{
		get
		{
			return this.GetTable<lc_ShippingInfoTable>();
		}
	}
	
	public System.Data.Linq.Table<lc_ShippingRegion> lc_ShippingRegions
	{
		get
		{
			return this.GetTable<lc_ShippingRegion>();
		}
	}
	
	public System.Data.Linq.Table<lc_SizeTable> lc_SizeTables
	{
		get
		{
			return this.GetTable<lc_SizeTable>();
		}
	}
	
	public System.Data.Linq.Table<lc_StateTaxTable> lc_StateTaxTables
	{
		get
		{
			return this.GetTable<lc_StateTaxTable>();
		}
	}
	
	public System.Data.Linq.Table<lc_DigitalProduct> lc_DigitalProducts
	{
		get
		{
			return this.GetTable<lc_DigitalProduct>();
		}
	}
	
	public System.Data.Linq.Table<lc_Country> lc_Countries
	{
		get
		{
			return this.GetTable<lc_Country>();
		}
	}
	
	public System.Data.Linq.Table<lc_State> lc_States
	{
		get
		{
			return this.GetTable<lc_State>();
		}
	}
	
	public System.Data.Linq.Table<lc_ShoppingCart> lc_ShoppingCarts
	{
		get
		{
			return this.GetTable<lc_ShoppingCart>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllProductsInCategory")]
	public ISingleResult<GetAllProductsInCategoryResult> GetAllProductsInCategory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryID", DbType="Int")] System.Nullable<int> categoryID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoryID);
		return ((ISingleResult<GetAllProductsInCategoryResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetProductRecommendations")]
	public ISingleResult<GetProductRecommendationsResult> GetProductRecommendations([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="Int")] System.Nullable<int> productID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionLength", DbType="Int")] System.Nullable<int> descriptionLength)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productID, descriptionLength);
		return ((ISingleResult<GetProductRecommendationsResult>)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_BillingInfoTable")]
public partial class lc_BillingInfoTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _OrderID;
	
	private string _FirstName;
	
	private string _LastName;
	
	private string _MiddleName;
	
	private string _NickName;
	
	private string _Prefix;
	
	private string _Address;
	
	private string _Address2;
	
	private string _City;
	
	private string _State;
	
	private string _Zip;
	
	private string _Phone;
	
	private string _Fax;
	
	private string _Country;
	
	private EntityRef<lc_Order> _lc_Order;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnPrefixChanging(string value);
    partial void OnPrefixChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    #endregion
	
	public lc_BillingInfoTable()
	{
		this._lc_Order = default(EntityRef<lc_Order>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int OrderID
	{
		get
		{
			return this._OrderID;
		}
		set
		{
			if ((this._OrderID != value))
			{
				if (this._lc_Order.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnOrderIDChanging(value);
				this.SendPropertyChanging();
				this._OrderID = value;
				this.SendPropertyChanged("OrderID");
				this.OnOrderIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)")]
	public string MiddleName
	{
		get
		{
			return this._MiddleName;
		}
		set
		{
			if ((this._MiddleName != value))
			{
				this.OnMiddleNameChanging(value);
				this.SendPropertyChanging();
				this._MiddleName = value;
				this.SendPropertyChanged("MiddleName");
				this.OnMiddleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="NVarChar(50)")]
	public string NickName
	{
		get
		{
			return this._NickName;
		}
		set
		{
			if ((this._NickName != value))
			{
				this.OnNickNameChanging(value);
				this.SendPropertyChanging();
				this._NickName = value;
				this.SendPropertyChanged("NickName");
				this.OnNickNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefix", DbType="Char(6)")]
	public string Prefix
	{
		get
		{
			return this._Prefix;
		}
		set
		{
			if ((this._Prefix != value))
			{
				this.OnPrefixChanging(value);
				this.SendPropertyChanging();
				this._Prefix = value;
				this.SendPropertyChanged("Prefix");
				this.OnPrefixChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(50)")]
	public string Address2
	{
		get
		{
			return this._Address2;
		}
		set
		{
			if ((this._Address2 != value))
			{
				this.OnAddress2Changing(value);
				this.SendPropertyChanging();
				this._Address2 = value;
				this.SendPropertyChanged("Address2");
				this.OnAddress2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(2)")]
	public string State
	{
		get
		{
			return this._State;
		}
		set
		{
			if ((this._State != value))
			{
				this.OnStateChanging(value);
				this.SendPropertyChanging();
				this._State = value;
				this.SendPropertyChanged("State");
				this.OnStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NChar(15)")]
	public string Zip
	{
		get
		{
			return this._Zip;
		}
		set
		{
			if ((this._Zip != value))
			{
				this.OnZipChanging(value);
				this.SendPropertyChanging();
				this._Zip = value;
				this.SendPropertyChanged("Zip");
				this.OnZipChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(30)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(30)")]
	public string Fax
	{
		get
		{
			return this._Fax;
		}
		set
		{
			if ((this._Fax != value))
			{
				this.OnFaxChanging(value);
				this.SendPropertyChanging();
				this._Fax = value;
				this.SendPropertyChanged("Fax");
				this.OnFaxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Country
	{
		get
		{
			return this._Country;
		}
		set
		{
			if ((this._Country != value))
			{
				this.OnCountryChanging(value);
				this.SendPropertyChanging();
				this._Country = value;
				this.SendPropertyChanged("Country");
				this.OnCountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Order_lc_BillingInfoTable", Storage="_lc_Order", ThisKey="OrderID", OtherKey="OrderID", IsForeignKey=true)]
	public lc_Order lc_Order
	{
		get
		{
			return this._lc_Order.Entity;
		}
		set
		{
			lc_Order previousValue = this._lc_Order.Entity;
			if (((previousValue != value) 
						|| (this._lc_Order.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._lc_Order.Entity = null;
					previousValue.lc_BillingInfoTable = null;
				}
				this._lc_Order.Entity = value;
				if ((value != null))
				{
					value.lc_BillingInfoTable = this;
					this._OrderID = value.OrderID;
				}
				else
				{
					this._OrderID = default(int);
				}
				this.SendPropertyChanged("lc_Order");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_WishList")]
public partial class lc_WishList : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _WishListID;
	
	private string _UserName;
	
	private int _ProductID;
	
	private System.DateTime _DateAdded;
	
	private int _SizeID;
	
	private int _ColorID;
	
	private EntityRef<lc_ColorTable> _lc_ColorTable;
	
	private EntityRef<lc_Product> _lc_Product;
	
	private EntityRef<lc_SizeTable> _lc_SizeTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWishListIDChanging(int value);
    partial void OnWishListIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnSizeIDChanging(int value);
    partial void OnSizeIDChanged();
    partial void OnColorIDChanging(int value);
    partial void OnColorIDChanged();
    #endregion
	
	public lc_WishList()
	{
		this._lc_ColorTable = default(EntityRef<lc_ColorTable>);
		this._lc_Product = default(EntityRef<lc_Product>);
		this._lc_SizeTable = default(EntityRef<lc_SizeTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WishListID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int WishListID
	{
		get
		{
			return this._WishListID;
		}
		set
		{
			if ((this._WishListID != value))
			{
				this.OnWishListIDChanging(value);
				this.SendPropertyChanging();
				this._WishListID = value;
				this.SendPropertyChanged("WishListID");
				this.OnWishListIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._lc_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="SmallDateTime NOT NULL")]
	public System.DateTime DateAdded
	{
		get
		{
			return this._DateAdded;
		}
		set
		{
			if ((this._DateAdded != value))
			{
				this.OnDateAddedChanging(value);
				this.SendPropertyChanging();
				this._DateAdded = value;
				this.SendPropertyChanged("DateAdded");
				this.OnDateAddedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int SizeID
	{
		get
		{
			return this._SizeID;
		}
		set
		{
			if ((this._SizeID != value))
			{
				if (this._lc_SizeTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSizeIDChanging(value);
				this.SendPropertyChanging();
				this._SizeID = value;
				this.SendPropertyChanged("SizeID");
				this.OnSizeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ColorID
	{
		get
		{
			return this._ColorID;
		}
		set
		{
			if ((this._ColorID != value))
			{
				if (this._lc_ColorTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnColorIDChanging(value);
				this.SendPropertyChanging();
				this._ColorID = value;
				this.SendPropertyChanged("ColorID");
				this.OnColorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_ColorTable_lc_WishList", Storage="_lc_ColorTable", ThisKey="ColorID", OtherKey="ColorID", IsForeignKey=true)]
	public lc_ColorTable lc_ColorTable
	{
		get
		{
			return this._lc_ColorTable.Entity;
		}
		set
		{
			lc_ColorTable previousValue = this._lc_ColorTable.Entity;
			if (((previousValue != value) 
						|| (this._lc_ColorTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._lc_ColorTable.Entity = null;
					previousValue.lc_WishLists.Remove(this);
				}
				this._lc_ColorTable.Entity = value;
				if ((value != null))
				{
					value.lc_WishLists.Add(this);
					this._ColorID = value.ColorID;
				}
				else
				{
					this._ColorID = default(int);
				}
				this.SendPropertyChanged("lc_ColorTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Product_lc_WishList", Storage="_lc_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
	public lc_Product lc_Product
	{
		get
		{
			return this._lc_Product.Entity;
		}
		set
		{
			lc_Product previousValue = this._lc_Product.Entity;
			if (((previousValue != value) 
						|| (this._lc_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._lc_Product.Entity = null;
					previousValue.lc_WishLists.Remove(this);
				}
				this._lc_Product.Entity = value;
				if ((value != null))
				{
					value.lc_WishLists.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("lc_Product");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_SizeTable_lc_WishList", Storage="_lc_SizeTable", ThisKey="SizeID", OtherKey="SizeID", IsForeignKey=true)]
	public lc_SizeTable lc_SizeTable
	{
		get
		{
			return this._lc_SizeTable.Entity;
		}
		set
		{
			lc_SizeTable previousValue = this._lc_SizeTable.Entity;
			if (((previousValue != value) 
						|| (this._lc_SizeTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._lc_SizeTable.Entity = null;
					previousValue.lc_WishLists.Remove(this);
				}
				this._lc_SizeTable.Entity = value;
				if ((value != null))
				{
					value.lc_WishLists.Add(this);
					this._SizeID = value.SizeID;
				}
				else
				{
					this._SizeID = default(int);
				}
				this.SendPropertyChanged("lc_SizeTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_Category")]
public partial class lc_Category : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CategoryID;
	
	private int _DepartmentID;
	
	private string _Name;
	
	private string _Description;
	
	private EntitySet<lc_ProductCategory> _lc_ProductCategories;
	
	private EntityRef<lc_Department> _lc_Department;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnDepartmentIDChanging(int value);
    partial void OnDepartmentIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public lc_Category()
	{
		this._lc_ProductCategories = new EntitySet<lc_ProductCategory>(new Action<lc_ProductCategory>(this.attach_lc_ProductCategories), new Action<lc_ProductCategory>(this.detach_lc_ProductCategories));
		this._lc_Department = default(EntityRef<lc_Department>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CategoryID
	{
		get
		{
			return this._CategoryID;
		}
		set
		{
			if ((this._CategoryID != value))
			{
				this.OnCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._CategoryID = value;
				this.SendPropertyChanged("CategoryID");
				this.OnCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int NOT NULL")]
	public int DepartmentID
	{
		get
		{
			return this._DepartmentID;
		}
		set
		{
			if ((this._DepartmentID != value))
			{
				if (this._lc_Department.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDepartmentIDChanging(value);
				this.SendPropertyChanging();
				this._DepartmentID = value;
				this.SendPropertyChanged("DepartmentID");
				this.OnDepartmentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1000)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Category_lc_ProductCategory", Storage="_lc_ProductCategories", ThisKey="CategoryID", OtherKey="CategoryID")]
	public EntitySet<lc_ProductCategory> lc_ProductCategories
	{
		get
		{
			return this._lc_ProductCategories;
		}
		set
		{
			this._lc_ProductCategories.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Department_lc_Category", Storage="_lc_Department", ThisKey="DepartmentID", OtherKey="DepartmentID", IsForeignKey=true)]
	public lc_Department lc_Department
	{
		get
		{
			return this._lc_Department.Entity;
		}
		set
		{
			lc_Department previousValue = this._lc_Department.Entity;
			if (((previousValue != value) 
						|| (this._lc_Department.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._lc_Department.Entity = null;
					previousValue.lc_Categories.Remove(this);
				}
				this._lc_Department.Entity = value;
				if ((value != null))
				{
					value.lc_Categories.Add(this);
					this._DepartmentID = value.DepartmentID;
				}
				else
				{
					this._DepartmentID = default(int);
				}
				this.SendPropertyChanged("lc_Department");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_lc_ProductCategories(lc_ProductCategory entity)
	{
		this.SendPropertyChanging();
		entity.lc_Category = this;
	}
	
	private void detach_lc_ProductCategories(lc_ProductCategory entity)
	{
		this.SendPropertyChanging();
		entity.lc_Category = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_ColorTable")]
public partial class lc_ColorTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ColorID;
	
	private string _Color;
	
	private EntitySet<lc_WishList> _lc_WishLists;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnColorIDChanging(int value);
    partial void OnColorIDChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    #endregion
	
	public lc_ColorTable()
	{
		this._lc_WishLists = new EntitySet<lc_WishList>(new Action<lc_WishList>(this.attach_lc_WishLists), new Action<lc_WishList>(this.detach_lc_WishLists));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ColorID
	{
		get
		{
			return this._ColorID;
		}
		set
		{
			if ((this._ColorID != value))
			{
				this.OnColorIDChanging(value);
				this.SendPropertyChanging();
				this._ColorID = value;
				this.SendPropertyChanged("ColorID");
				this.OnColorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(50)")]
	public string Color
	{
		get
		{
			return this._Color;
		}
		set
		{
			if ((this._Color != value))
			{
				this.OnColorChanging(value);
				this.SendPropertyChanging();
				this._Color = value;
				this.SendPropertyChanged("Color");
				this.OnColorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_ColorTable_lc_WishList", Storage="_lc_WishLists", ThisKey="ColorID", OtherKey="ColorID")]
	public EntitySet<lc_WishList> lc_WishLists
	{
		get
		{
			return this._lc_WishLists;
		}
		set
		{
			this._lc_WishLists.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_lc_WishLists(lc_WishList entity)
	{
		this.SendPropertyChanging();
		entity.lc_ColorTable = this;
	}
	
	private void detach_lc_WishLists(lc_WishList entity)
	{
		this.SendPropertyChanging();
		entity.lc_ColorTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_CouponTable")]
public partial class lc_CouponTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CouponID;
	
	private string _CouponName;
	
	private string _CouponCode;
	
	private decimal _Amount;
	
	private decimal _DiscountPercent;
	
	private System.DateTime _ExpireDate;
	
	private System.DateTime _DateMade;
	
	private EntityRef<lc_CouponTable> _lc_CouponTable2;
	
	private EntityRef<lc_CouponTable> _lc_CouponTable1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCouponIDChanging(int value);
    partial void OnCouponIDChanged();
    partial void OnCouponNameChanging(string value);
    partial void OnCouponNameChanged();
    partial void OnCouponCodeChanging(string value);
    partial void OnCouponCodeChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnDiscountPercentChanging(decimal value);
    partial void OnDiscountPercentChanged();
    partial void OnExpireDateChanging(System.DateTime value);
    partial void OnExpireDateChanged();
    partial void OnDateMadeChanging(System.DateTime value);
    partial void OnDateMadeChanged();
    #endregion
	
	public lc_CouponTable()
	{
		this._lc_CouponTable2 = default(EntityRef<lc_CouponTable>);
		this._lc_CouponTable1 = default(EntityRef<lc_CouponTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouponID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CouponID
	{
		get
		{
			return this._CouponID;
		}
		set
		{
			if ((this._CouponID != value))
			{
				if (this._lc_CouponTable1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCouponIDChanging(value);
				this.SendPropertyChanging();
				this._CouponID = value;
				this.SendPropertyChanged("CouponID");
				this.OnCouponIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouponName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string CouponName
	{
		get
		{
			return this._CouponName;
		}
		set
		{
			if ((this._CouponName != value))
			{
				this.OnCouponNameChanging(value);
				this.SendPropertyChanging();
				this._CouponName = value;
				this.SendPropertyChanged("CouponName");
				this.OnCouponNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouponCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string CouponCode
	{
		get
		{
			return this._CouponCode;
		}
		set
		{
			if ((this._CouponCode != value))
			{
				this.OnCouponCodeChanging(value);
				this.SendPropertyChanging();
				this._CouponCode = value;
				this.SendPropertyChanged("CouponCode");
				this.OnCouponCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
	public decimal Amount
	{
		get
		{
			return this._Amount;
		}
		set
		{
			if ((this._Amount != value))
			{
				this.OnAmountChanging(value);
				this.SendPropertyChanging();
				this._Amount = value;
				this.SendPropertyChanged("Amount");
				this.OnAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPercent", DbType="Decimal(18,3) NOT NULL")]
	public decimal DiscountPercent
	{
		get
		{
			return this._DiscountPercent;
		}
		set
		{
			if ((this._DiscountPercent != value))
			{
				this.OnDiscountPercentChanging(value);
				this.SendPropertyChanging();
				this._DiscountPercent = value;
				this.SendPropertyChanged("DiscountPercent");
				this.OnDiscountPercentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="SmallDateTime NOT NULL")]
	public System.DateTime ExpireDate
	{
		get
		{
			return this._ExpireDate;
		}
		set
		{
			if ((this._ExpireDate != value))
			{
				this.OnExpireDateChanging(value);
				this.SendPropertyChanging();
				this._ExpireDate = value;
				this.SendPropertyChanged("ExpireDate");
				this.OnExpireDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateMade", DbType="SmallDateTime NOT NULL")]
	public System.DateTime DateMade
	{
		get
		{
			return this._DateMade;
		}
		set
		{
			if ((this._DateMade != value))
			{
				this.OnDateMadeChanging(value);
				this.SendPropertyChanging();
				this._DateMade = value;
				this.SendPropertyChanged("DateMade");
				this.OnDateMadeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_CouponTable_lc_CouponTable", Storage="_lc_CouponTable2", ThisKey="CouponID", OtherKey="CouponID", IsUnique=true, IsForeignKey=false)]
	public lc_CouponTable lc_CouponTable2
	{
		get
		{
			return this._lc_CouponTable2.Entity;
		}
		set
		{
			lc_CouponTable previousValue = this._lc_CouponTable2.Entity;
			if (((previousValue != value) 
						|| (this._lc_CouponTable2.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._lc_CouponTable2.Entity = null;
					previousValue.lc_CouponTable1 = null;
				}
				this._lc_CouponTable2.Entity = value;
				if ((value != null))
				{
					value.lc_CouponTable1 = this;
				}
				this.SendPropertyChanged("lc_CouponTable2");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_CouponTable_lc_CouponTable", Storage="_lc_CouponTable1", ThisKey="CouponID", OtherKey="CouponID", IsForeignKey=true)]
	public lc_CouponTable lc_CouponTable1
	{
		get
		{
			return this._lc_CouponTable1.Entity;
		}
		set
		{
			lc_CouponTable previousValue = this._lc_CouponTable1.Entity;
			if (((previousValue != value) 
						|| (this._lc_CouponTable1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._lc_CouponTable1.Entity = null;
					previousValue.lc_CouponTable2 = null;
				}
				this._lc_CouponTable1.Entity = value;
				if ((value != null))
				{
					value.lc_CouponTable2 = this;
					this._CouponID = value.CouponID;
				}
				else
				{
					this._CouponID = default(int);
				}
				this.SendPropertyChanged("lc_CouponTable1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_Department")]
public partial class lc_Department : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _DepartmentID;
	
	private string _Name;
	
	private string _Description;
	
	private EntitySet<lc_Category> _lc_Categories;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentIDChanging(int value);
    partial void OnDepartmentIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public lc_Department()
	{
		this._lc_Categories = new EntitySet<lc_Category>(new Action<lc_Category>(this.attach_lc_Categories), new Action<lc_Category>(this.detach_lc_Categories));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int DepartmentID
	{
		get
		{
			return this._DepartmentID;
		}
		set
		{
			if ((this._DepartmentID != value))
			{
				this.OnDepartmentIDChanging(value);
				this.SendPropertyChanging();
				this._DepartmentID = value;
				this.SendPropertyChanged("DepartmentID");
				this.OnDepartmentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1000)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Department_lc_Category", Storage="_lc_Categories", ThisKey="DepartmentID", OtherKey="DepartmentID")]
	public EntitySet<lc_Category> lc_Categories
	{
		get
		{
			return this._lc_Categories;
		}
		set
		{
			this._lc_Categories.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_lc_Categories(lc_Category entity)
	{
		this.SendPropertyChanging();
		entity.lc_Department = this;
	}
	
	private void detach_lc_Categories(lc_Category entity)
	{
		this.SendPropertyChanging();
		entity.lc_Department = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_OrderDetail")]
public partial class lc_OrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _OrderID;
	
	private int _ProductID;
	
	private string _ProductName;
	
	private int _Quantity;
	
	private decimal _UnitCost;
	
	private System.Nullable<decimal> _Subtotal;
	
	private string _Size;
	
	private string _Color;
	
	private string _CouponCode;
	
	private string _UserName;
	
	private System.Nullable<int> _SellerID;
	
	private System.Nullable<double> _Tax;
	
	private string _Region;
	
	private EntityRef<lc_Order> _lc_Order;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnUnitCostChanging(decimal value);
    partial void OnUnitCostChanged();
    partial void OnSubtotalChanging(System.Nullable<decimal> value);
    partial void OnSubtotalChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnCouponCodeChanging(string value);
    partial void OnCouponCodeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnSellerIDChanging(System.Nullable<int> value);
    partial void OnSellerIDChanged();
    partial void OnTaxChanging(System.Nullable<double> value);
    partial void OnTaxChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    #endregion
	
	public lc_OrderDetail()
	{
		this._lc_Order = default(EntityRef<lc_Order>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int OrderID
	{
		get
		{
			return this._OrderID;
		}
		set
		{
			if ((this._OrderID != value))
			{
				if (this._lc_Order.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnOrderIDChanging(value);
				this.SendPropertyChanging();
				this._OrderID = value;
				this.SendPropertyChanged("OrderID");
				this.OnOrderIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string ProductName
	{
		get
		{
			return this._ProductName;
		}
		set
		{
			if ((this._ProductName != value))
			{
				this.OnProductNameChanging(value);
				this.SendPropertyChanging();
				this._ProductName = value;
				this.SendPropertyChanged("ProductName");
				this.OnProductNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
	public int Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCost", DbType="Money NOT NULL")]
	public decimal UnitCost
	{
		get
		{
			return this._UnitCost;
		}
		set
		{
			if ((this._UnitCost != value))
			{
				this.OnUnitCostChanging(value);
				this.SendPropertyChanging();
				this._UnitCost = value;
				this.SendPropertyChanged("UnitCost");
				this.OnUnitCostChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subtotal", AutoSync=AutoSync.Always, DbType="Money", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
	public System.Nullable<decimal> Subtotal
	{
		get
		{
			return this._Subtotal;
		}
		set
		{
			if ((this._Subtotal != value))
			{
				this.OnSubtotalChanging(value);
				this.SendPropertyChanging();
				this._Subtotal = value;
				this.SendPropertyChanged("Subtotal");
				this.OnSubtotalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="NVarChar(50)")]
	public string Size
	{
		get
		{
			return this._Size;
		}
		set
		{
			if ((this._Size != value))
			{
				this.OnSizeChanging(value);
				this.SendPropertyChanging();
				this._Size = value;
				this.SendPropertyChanged("Size");
				this.OnSizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(50)")]
	public string Color
	{
		get
		{
			return this._Color;
		}
		set
		{
			if ((this._Color != value))
			{
				this.OnColorChanging(value);
				this.SendPropertyChanging();
				this._Color = value;
				this.SendPropertyChanged("Color");
				this.OnColorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouponCode", DbType="NVarChar(50)")]
	public string CouponCode
	{
		get
		{
			return this._CouponCode;
		}
		set
		{
			if ((this._CouponCode != value))
			{
				this.OnCouponCodeChanging(value);
				this.SendPropertyChanging();
				this._CouponCode = value;
				this.SendPropertyChanged("CouponCode");
				this.OnCouponCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int")]
	public System.Nullable<int> SellerID
	{
		get
		{
			return this._SellerID;
		}
		set
		{
			if ((this._SellerID != value))
			{
				this.OnSellerIDChanging(value);
				this.SendPropertyChanging();
				this._SellerID = value;
				this.SendPropertyChanged("SellerID");
				this.OnSellerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Float")]
	public System.Nullable<double> Tax
	{
		get
		{
			return this._Tax;
		}
		set
		{
			if ((this._Tax != value))
			{
				this.OnTaxChanging(value);
				this.SendPropertyChanging();
				this._Tax = value;
				this.SendPropertyChanged("Tax");
				this.OnTaxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(50)")]
	public string Region
	{
		get
		{
			return this._Region;
		}
		set
		{
			if ((this._Region != value))
			{
				this.OnRegionChanging(value);
				this.SendPropertyChanging();
				this._Region = value;
				this.SendPropertyChanged("Region");
				this.OnRegionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Order_lc_OrderDetail", Storage="_lc_Order", ThisKey="OrderID", OtherKey="OrderID", IsForeignKey=true)]
	public lc_Order lc_Order
	{
		get
		{
			return this._lc_Order.Entity;
		}
		set
		{
			lc_Order previousValue = this._lc_Order.Entity;
			if (((previousValue != value) 
						|| (this._lc_Order.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._lc_Order.Entity = null;
					previousValue.lc_OrderDetails.Remove(this);
				}
				this._lc_Order.Entity = value;
				if ((value != null))
				{
					value.lc_OrderDetails.Add(this);
					this._OrderID = value.OrderID;
				}
				else
				{
					this._OrderID = default(int);
				}
				this.SendPropertyChanged("lc_Order");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_Orders")]
public partial class lc_Order : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _OrderID;
	
	private System.DateTime _DateCreated;
	
	private System.Nullable<System.DateTime> _DateShipped;
	
	private bool _Verified;
	
	private bool _Completed;
	
	private bool _Canceled;
	
	private string _Comments;
	
	private string _CustomerName;
	
	private string _CustomerEmail;
	
	private string _ShippingAddress;
	
	private EntityRef<lc_BillingInfoTable> _lc_BillingInfoTable;
	
	private EntitySet<lc_OrderDetail> _lc_OrderDetails;
	
	private EntityRef<lc_ShippingInfoTable> _lc_ShippingInfoTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateShippedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateShippedChanged();
    partial void OnVerifiedChanging(bool value);
    partial void OnVerifiedChanged();
    partial void OnCompletedChanging(bool value);
    partial void OnCompletedChanged();
    partial void OnCanceledChanging(bool value);
    partial void OnCanceledChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCustomerEmailChanging(string value);
    partial void OnCustomerEmailChanged();
    partial void OnShippingAddressChanging(string value);
    partial void OnShippingAddressChanged();
    #endregion
	
	public lc_Order()
	{
		this._lc_BillingInfoTable = default(EntityRef<lc_BillingInfoTable>);
		this._lc_OrderDetails = new EntitySet<lc_OrderDetail>(new Action<lc_OrderDetail>(this.attach_lc_OrderDetails), new Action<lc_OrderDetail>(this.detach_lc_OrderDetails));
		this._lc_ShippingInfoTable = default(EntityRef<lc_ShippingInfoTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int OrderID
	{
		get
		{
			return this._OrderID;
		}
		set
		{
			if ((this._OrderID != value))
			{
				this.OnOrderIDChanging(value);
				this.SendPropertyChanging();
				this._OrderID = value;
				this.SendPropertyChanged("OrderID");
				this.OnOrderIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="SmallDateTime NOT NULL")]
	public System.DateTime DateCreated
	{
		get
		{
			return this._DateCreated;
		}
		set
		{
			if ((this._DateCreated != value))
			{
				this.OnDateCreatedChanging(value);
				this.SendPropertyChanging();
				this._DateCreated = value;
				this.SendPropertyChanged("DateCreated");
				this.OnDateCreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateShipped", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> DateShipped
	{
		get
		{
			return this._DateShipped;
		}
		set
		{
			if ((this._DateShipped != value))
			{
				this.OnDateShippedChanging(value);
				this.SendPropertyChanging();
				this._DateShipped = value;
				this.SendPropertyChanged("DateShipped");
				this.OnDateShippedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Verified", DbType="Bit NOT NULL")]
	public bool Verified
	{
		get
		{
			return this._Verified;
		}
		set
		{
			if ((this._Verified != value))
			{
				this.OnVerifiedChanging(value);
				this.SendPropertyChanging();
				this._Verified = value;
				this.SendPropertyChanged("Verified");
				this.OnVerifiedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Bit NOT NULL")]
	public bool Completed
	{
		get
		{
			return this._Completed;
		}
		set
		{
			if ((this._Completed != value))
			{
				this.OnCompletedChanging(value);
				this.SendPropertyChanging();
				this._Completed = value;
				this.SendPropertyChanged("Completed");
				this.OnCompletedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Canceled", DbType="Bit NOT NULL")]
	public bool Canceled
	{
		get
		{
			return this._Canceled;
		}
		set
		{
			if ((this._Canceled != value))
			{
				this.OnCanceledChanging(value);
				this.SendPropertyChanging();
				this._Canceled = value;
				this.SendPropertyChanged("Canceled");
				this.OnCanceledChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(1000)")]
	public string Comments
	{
		get
		{
			return this._Comments;
		}
		set
		{
			if ((this._Comments != value))
			{
				this.OnCommentsChanging(value);
				this.SendPropertyChanging();
				this._Comments = value;
				this.SendPropertyChanged("Comments");
				this.OnCommentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(50)")]
	public string CustomerName
	{
		get
		{
			return this._CustomerName;
		}
		set
		{
			if ((this._CustomerName != value))
			{
				this.OnCustomerNameChanging(value);
				this.SendPropertyChanging();
				this._CustomerName = value;
				this.SendPropertyChanged("CustomerName");
				this.OnCustomerNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerEmail", DbType="VarChar(50)")]
	public string CustomerEmail
	{
		get
		{
			return this._CustomerEmail;
		}
		set
		{
			if ((this._CustomerEmail != value))
			{
				this.OnCustomerEmailChanging(value);
				this.SendPropertyChanging();
				this._CustomerEmail = value;
				this.SendPropertyChanged("CustomerEmail");
				this.OnCustomerEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingAddress", DbType="VarChar(500)")]
	public string ShippingAddress
	{
		get
		{
			return this._ShippingAddress;
		}
		set
		{
			if ((this._ShippingAddress != value))
			{
				this.OnShippingAddressChanging(value);
				this.SendPropertyChanging();
				this._ShippingAddress = value;
				this.SendPropertyChanged("ShippingAddress");
				this.OnShippingAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Order_lc_BillingInfoTable", Storage="_lc_BillingInfoTable", ThisKey="OrderID", OtherKey="OrderID", IsUnique=true, IsForeignKey=false)]
	public lc_BillingInfoTable lc_BillingInfoTable
	{
		get
		{
			return this._lc_BillingInfoTable.Entity;
		}
		set
		{
			lc_BillingInfoTable previousValue = this._lc_BillingInfoTable.Entity;
			if (((previousValue != value) 
						|| (this._lc_BillingInfoTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._lc_BillingInfoTable.Entity = null;
					previousValue.lc_Order = null;
				}
				this._lc_BillingInfoTable.Entity = value;
				if ((value != null))
				{
					value.lc_Order = this;
				}
				this.SendPropertyChanged("lc_BillingInfoTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Order_lc_OrderDetail", Storage="_lc_OrderDetails", ThisKey="OrderID", OtherKey="OrderID")]
	public EntitySet<lc_OrderDetail> lc_OrderDetails
	{
		get
		{
			return this._lc_OrderDetails;
		}
		set
		{
			this._lc_OrderDetails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Order_lc_ShippingInfoTable", Storage="_lc_ShippingInfoTable", ThisKey="OrderID", OtherKey="OrderID", IsUnique=true, IsForeignKey=false)]
	public lc_ShippingInfoTable lc_ShippingInfoTable
	{
		get
		{
			return this._lc_ShippingInfoTable.Entity;
		}
		set
		{
			lc_ShippingInfoTable previousValue = this._lc_ShippingInfoTable.Entity;
			if (((previousValue != value) 
						|| (this._lc_ShippingInfoTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._lc_ShippingInfoTable.Entity = null;
					previousValue.lc_Order = null;
				}
				this._lc_ShippingInfoTable.Entity = value;
				if ((value != null))
				{
					value.lc_Order = this;
				}
				this.SendPropertyChanged("lc_ShippingInfoTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_lc_OrderDetails(lc_OrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.lc_Order = this;
	}
	
	private void detach_lc_OrderDetails(lc_OrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.lc_Order = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_Product")]
public partial class lc_Product : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductID;
	
	private string _Name;
	
	private string _Description;
	
	private decimal _Price;
	
	private string _Image1FileName;
	
	private string _Image2FileName;
	
	private bool _OnCatalogPromotion;
	
	private bool _OnDepartmentPromotion;
	
	private bool _Sizeable;
	
	private bool _Colorable;
	
	private System.DateTime _DateAdded;
	
	private int _TotalRemaining;
	
	private EntitySet<lc_WishList> _lc_WishLists;
	
	private EntitySet<lc_ProductCategory> _lc_ProductCategories;
	
	private EntitySet<lc_ProductImage> _lc_ProductImages;
	
	private EntitySet<lc_ProductInventory> _lc_ProductInventories;
	
	private EntitySet<lc_Recommendation> _lc_Recommendations;
	
	private EntitySet<lc_DigitalProduct> _lc_DigitalProducts;
	
	private EntitySet<lc_ShoppingCart> _lc_ShoppingCarts;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnImage1FileNameChanging(string value);
    partial void OnImage1FileNameChanged();
    partial void OnImage2FileNameChanging(string value);
    partial void OnImage2FileNameChanged();
    partial void OnOnCatalogPromotionChanging(bool value);
    partial void OnOnCatalogPromotionChanged();
    partial void OnOnDepartmentPromotionChanging(bool value);
    partial void OnOnDepartmentPromotionChanged();
    partial void OnSizeableChanging(bool value);
    partial void OnSizeableChanged();
    partial void OnColorableChanging(bool value);
    partial void OnColorableChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnTotalRemainingChanging(int value);
    partial void OnTotalRemainingChanged();
    #endregion
	
	public lc_Product()
	{
		this._lc_WishLists = new EntitySet<lc_WishList>(new Action<lc_WishList>(this.attach_lc_WishLists), new Action<lc_WishList>(this.detach_lc_WishLists));
		this._lc_ProductCategories = new EntitySet<lc_ProductCategory>(new Action<lc_ProductCategory>(this.attach_lc_ProductCategories), new Action<lc_ProductCategory>(this.detach_lc_ProductCategories));
		this._lc_ProductImages = new EntitySet<lc_ProductImage>(new Action<lc_ProductImage>(this.attach_lc_ProductImages), new Action<lc_ProductImage>(this.detach_lc_ProductImages));
		this._lc_ProductInventories = new EntitySet<lc_ProductInventory>(new Action<lc_ProductInventory>(this.attach_lc_ProductInventories), new Action<lc_ProductInventory>(this.detach_lc_ProductInventories));
		this._lc_Recommendations = new EntitySet<lc_Recommendation>(new Action<lc_Recommendation>(this.attach_lc_Recommendations), new Action<lc_Recommendation>(this.detach_lc_Recommendations));
		this._lc_DigitalProducts = new EntitySet<lc_DigitalProduct>(new Action<lc_DigitalProduct>(this.attach_lc_DigitalProducts), new Action<lc_DigitalProduct>(this.detach_lc_DigitalProducts));
		this._lc_ShoppingCarts = new EntitySet<lc_ShoppingCart>(new Action<lc_ShoppingCart>(this.attach_lc_ShoppingCarts), new Action<lc_ShoppingCart>(this.detach_lc_ShoppingCarts));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image1FileName", DbType="NVarChar(100)")]
	public string Image1FileName
	{
		get
		{
			return this._Image1FileName;
		}
		set
		{
			if ((this._Image1FileName != value))
			{
				this.OnImage1FileNameChanging(value);
				this.SendPropertyChanging();
				this._Image1FileName = value;
				this.SendPropertyChanged("Image1FileName");
				this.OnImage1FileNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image2FileName", DbType="NVarChar(100)")]
	public string Image2FileName
	{
		get
		{
			return this._Image2FileName;
		}
		set
		{
			if ((this._Image2FileName != value))
			{
				this.OnImage2FileNameChanging(value);
				this.SendPropertyChanging();
				this._Image2FileName = value;
				this.SendPropertyChanged("Image2FileName");
				this.OnImage2FileNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnCatalogPromotion", DbType="Bit NOT NULL")]
	public bool OnCatalogPromotion
	{
		get
		{
			return this._OnCatalogPromotion;
		}
		set
		{
			if ((this._OnCatalogPromotion != value))
			{
				this.OnOnCatalogPromotionChanging(value);
				this.SendPropertyChanging();
				this._OnCatalogPromotion = value;
				this.SendPropertyChanged("OnCatalogPromotion");
				this.OnOnCatalogPromotionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnDepartmentPromotion", DbType="Bit NOT NULL")]
	public bool OnDepartmentPromotion
	{
		get
		{
			return this._OnDepartmentPromotion;
		}
		set
		{
			if ((this._OnDepartmentPromotion != value))
			{
				this.OnOnDepartmentPromotionChanging(value);
				this.SendPropertyChanging();
				this._OnDepartmentPromotion = value;
				this.SendPropertyChanged("OnDepartmentPromotion");
				this.OnOnDepartmentPromotionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sizeable", DbType="Bit NOT NULL")]
	public bool Sizeable
	{
		get
		{
			return this._Sizeable;
		}
		set
		{
			if ((this._Sizeable != value))
			{
				this.OnSizeableChanging(value);
				this.SendPropertyChanging();
				this._Sizeable = value;
				this.SendPropertyChanged("Sizeable");
				this.OnSizeableChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Colorable", DbType="Bit NOT NULL")]
	public bool Colorable
	{
		get
		{
			return this._Colorable;
		}
		set
		{
			if ((this._Colorable != value))
			{
				this.OnColorableChanging(value);
				this.SendPropertyChanging();
				this._Colorable = value;
				this.SendPropertyChanged("Colorable");
				this.OnColorableChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="SmallDateTime NOT NULL")]
	public System.DateTime DateAdded
	{
		get
		{
			return this._DateAdded;
		}
		set
		{
			if ((this._DateAdded != value))
			{
				this.OnDateAddedChanging(value);
				this.SendPropertyChanging();
				this._DateAdded = value;
				this.SendPropertyChanged("DateAdded");
				this.OnDateAddedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRemaining", DbType="Int NOT NULL")]
	public int TotalRemaining
	{
		get
		{
			return this._TotalRemaining;
		}
		set
		{
			if ((this._TotalRemaining != value))
			{
				this.OnTotalRemainingChanging(value);
				this.SendPropertyChanging();
				this._TotalRemaining = value;
				this.SendPropertyChanged("TotalRemaining");
				this.OnTotalRemainingChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Product_lc_WishList", Storage="_lc_WishLists", ThisKey="ProductID", OtherKey="ProductID")]
	public EntitySet<lc_WishList> lc_WishLists
	{
		get
		{
			return this._lc_WishLists;
		}
		set
		{
			this._lc_WishLists.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Product_lc_ProductCategory", Storage="_lc_ProductCategories", ThisKey="ProductID", OtherKey="ProductID")]
	public EntitySet<lc_ProductCategory> lc_ProductCategories
	{
		get
		{
			return this._lc_ProductCategories;
		}
		set
		{
			this._lc_ProductCategories.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Product_lc_ProductImage", Storage="_lc_ProductImages", ThisKey="ProductID", OtherKey="ProductID")]
	public EntitySet<lc_ProductImage> lc_ProductImages
	{
		get
		{
			return this._lc_ProductImages;
		}
		set
		{
			this._lc_ProductImages.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Product_lc_ProductInventory", Storage="_lc_ProductInventories", ThisKey="ProductID", OtherKey="ProductID")]
	public EntitySet<lc_ProductInventory> lc_ProductInventories
	{
		get
		{
			return this._lc_ProductInventories;
		}
		set
		{
			this._lc_ProductInventories.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Product_lc_Recommendation", Storage="_lc_Recommendations", ThisKey="ProductID", OtherKey="ProductID")]
	public EntitySet<lc_Recommendation> lc_Recommendations
	{
		get
		{
			return this._lc_Recommendations;
		}
		set
		{
			this._lc_Recommendations.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Product_lc_DigitalProduct", Storage="_lc_DigitalProducts", ThisKey="ProductID", OtherKey="ProductID")]
	public EntitySet<lc_DigitalProduct> lc_DigitalProducts
	{
		get
		{
			return this._lc_DigitalProducts;
		}
		set
		{
			this._lc_DigitalProducts.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Product_lc_ShoppingCart", Storage="_lc_ShoppingCarts", ThisKey="ProductID", OtherKey="ProductID")]
	public EntitySet<lc_ShoppingCart> lc_ShoppingCarts
	{
		get
		{
			return this._lc_ShoppingCarts;
		}
		set
		{
			this._lc_ShoppingCarts.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_lc_WishLists(lc_WishList entity)
	{
		this.SendPropertyChanging();
		entity.lc_Product = this;
	}
	
	private void detach_lc_WishLists(lc_WishList entity)
	{
		this.SendPropertyChanging();
		entity.lc_Product = null;
	}
	
	private void attach_lc_ProductCategories(lc_ProductCategory entity)
	{
		this.SendPropertyChanging();
		entity.lc_Product = this;
	}
	
	private void detach_lc_ProductCategories(lc_ProductCategory entity)
	{
		this.SendPropertyChanging();
		entity.lc_Product = null;
	}
	
	private void attach_lc_ProductImages(lc_ProductImage entity)
	{
		this.SendPropertyChanging();
		entity.lc_Product = this;
	}
	
	private void detach_lc_ProductImages(lc_ProductImage entity)
	{
		this.SendPropertyChanging();
		entity.lc_Product = null;
	}
	
	private void attach_lc_ProductInventories(lc_ProductInventory entity)
	{
		this.SendPropertyChanging();
		entity.lc_Product = this;
	}
	
	private void detach_lc_ProductInventories(lc_ProductInventory entity)
	{
		this.SendPropertyChanging();
		entity.lc_Product = null;
	}
	
	private void attach_lc_Recommendations(lc_Recommendation entity)
	{
		this.SendPropertyChanging();
		entity.lc_Product = this;
	}
	
	private void detach_lc_Recommendations(lc_Recommendation entity)
	{
		this.SendPropertyChanging();
		entity.lc_Product = null;
	}
	
	private void attach_lc_DigitalProducts(lc_DigitalProduct entity)
	{
		this.SendPropertyChanging();
		entity.lc_Product = this;
	}
	
	private void detach_lc_DigitalProducts(lc_DigitalProduct entity)
	{
		this.SendPropertyChanging();
		entity.lc_Product = null;
	}
	
	private void attach_lc_ShoppingCarts(lc_ShoppingCart entity)
	{
		this.SendPropertyChanging();
		entity.lc_Product = this;
	}
	
	private void detach_lc_ShoppingCarts(lc_ShoppingCart entity)
	{
		this.SendPropertyChanging();
		entity.lc_Product = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_ProductCategory")]
public partial class lc_ProductCategory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductID;
	
	private int _CategoryID;
	
	private EntityRef<lc_Category> _lc_Category;
	
	private EntityRef<lc_Product> _lc_Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    #endregion
	
	public lc_ProductCategory()
	{
		this._lc_Category = default(EntityRef<lc_Category>);
		this._lc_Product = default(EntityRef<lc_Product>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._lc_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int CategoryID
	{
		get
		{
			return this._CategoryID;
		}
		set
		{
			if ((this._CategoryID != value))
			{
				if (this._lc_Category.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._CategoryID = value;
				this.SendPropertyChanged("CategoryID");
				this.OnCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Category_lc_ProductCategory", Storage="_lc_Category", ThisKey="CategoryID", OtherKey="CategoryID", IsForeignKey=true)]
	public lc_Category lc_Category
	{
		get
		{
			return this._lc_Category.Entity;
		}
		set
		{
			lc_Category previousValue = this._lc_Category.Entity;
			if (((previousValue != value) 
						|| (this._lc_Category.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._lc_Category.Entity = null;
					previousValue.lc_ProductCategories.Remove(this);
				}
				this._lc_Category.Entity = value;
				if ((value != null))
				{
					value.lc_ProductCategories.Add(this);
					this._CategoryID = value.CategoryID;
				}
				else
				{
					this._CategoryID = default(int);
				}
				this.SendPropertyChanged("lc_Category");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Product_lc_ProductCategory", Storage="_lc_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
	public lc_Product lc_Product
	{
		get
		{
			return this._lc_Product.Entity;
		}
		set
		{
			lc_Product previousValue = this._lc_Product.Entity;
			if (((previousValue != value) 
						|| (this._lc_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._lc_Product.Entity = null;
					previousValue.lc_ProductCategories.Remove(this);
				}
				this._lc_Product.Entity = value;
				if ((value != null))
				{
					value.lc_ProductCategories.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("lc_Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_ProductImage")]
public partial class lc_ProductImage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductImageID;
	
	private int _ProductID;
	
	private string _ImageName;
	
	private string _Title;
	
	private string _Description;
	
	private EntityRef<lc_Product> _lc_Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductImageIDChanging(int value);
    partial void OnProductImageIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnImageNameChanging(string value);
    partial void OnImageNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public lc_ProductImage()
	{
		this._lc_Product = default(EntityRef<lc_Product>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductImageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ProductImageID
	{
		get
		{
			return this._ProductImageID;
		}
		set
		{
			if ((this._ProductImageID != value))
			{
				this.OnProductImageIDChanging(value);
				this.SendPropertyChanging();
				this._ProductImageID = value;
				this.SendPropertyChanged("ProductImageID");
				this.OnProductImageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._lc_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string ImageName
	{
		get
		{
			return this._ImageName;
		}
		set
		{
			if ((this._ImageName != value))
			{
				this.OnImageNameChanging(value);
				this.SendPropertyChanging();
				this._ImageName = value;
				this.SendPropertyChanged("ImageName");
				this.OnImageNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Product_lc_ProductImage", Storage="_lc_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public lc_Product lc_Product
	{
		get
		{
			return this._lc_Product.Entity;
		}
		set
		{
			lc_Product previousValue = this._lc_Product.Entity;
			if (((previousValue != value) 
						|| (this._lc_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._lc_Product.Entity = null;
					previousValue.lc_ProductImages.Remove(this);
				}
				this._lc_Product.Entity = value;
				if ((value != null))
				{
					value.lc_ProductImages.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("lc_Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_ProductInventory")]
public partial class lc_ProductInventory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductInventoryID;
	
	private int _Quantity;
	
	private string _Size;
	
	private string _Color;
	
	private int _SellerID;
	
	private int _ProductID;
	
	private EntityRef<lc_Product> _lc_Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductInventoryIDChanging(int value);
    partial void OnProductInventoryIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnSellerIDChanging(int value);
    partial void OnSellerIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    #endregion
	
	public lc_ProductInventory()
	{
		this._lc_Product = default(EntityRef<lc_Product>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductInventoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ProductInventoryID
	{
		get
		{
			return this._ProductInventoryID;
		}
		set
		{
			if ((this._ProductInventoryID != value))
			{
				this.OnProductInventoryIDChanging(value);
				this.SendPropertyChanging();
				this._ProductInventoryID = value;
				this.SendPropertyChanged("ProductInventoryID");
				this.OnProductInventoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
	public int Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Size
	{
		get
		{
			return this._Size;
		}
		set
		{
			if ((this._Size != value))
			{
				this.OnSizeChanging(value);
				this.SendPropertyChanging();
				this._Size = value;
				this.SendPropertyChanged("Size");
				this.OnSizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Color
	{
		get
		{
			return this._Color;
		}
		set
		{
			if ((this._Color != value))
			{
				this.OnColorChanging(value);
				this.SendPropertyChanging();
				this._Color = value;
				this.SendPropertyChanged("Color");
				this.OnColorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int NOT NULL")]
	public int SellerID
	{
		get
		{
			return this._SellerID;
		}
		set
		{
			if ((this._SellerID != value))
			{
				this.OnSellerIDChanging(value);
				this.SendPropertyChanging();
				this._SellerID = value;
				this.SendPropertyChanged("SellerID");
				this.OnSellerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._lc_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Product_lc_ProductInventory", Storage="_lc_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public lc_Product lc_Product
	{
		get
		{
			return this._lc_Product.Entity;
		}
		set
		{
			lc_Product previousValue = this._lc_Product.Entity;
			if (((previousValue != value) 
						|| (this._lc_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._lc_Product.Entity = null;
					previousValue.lc_ProductInventories.Remove(this);
				}
				this._lc_Product.Entity = value;
				if ((value != null))
				{
					value.lc_ProductInventories.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("lc_Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_Recommendation")]
public partial class lc_Recommendation : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _RecommendationID;
	
	private System.Nullable<int> _ProductID;
	
	private string _Title;
	
	private string _Description;
	
	private System.Nullable<bool> _Approved;
	
	private System.Nullable<System.DateTime> _DateInserted;
	
	private string _UserName;
	
	private System.Nullable<int> _Points;
	
	private EntityRef<lc_Product> _lc_Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecommendationIDChanging(int value);
    partial void OnRecommendationIDChanged();
    partial void OnProductIDChanging(System.Nullable<int> value);
    partial void OnProductIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnApprovedChanging(System.Nullable<bool> value);
    partial void OnApprovedChanged();
    partial void OnDateInsertedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateInsertedChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPointsChanging(System.Nullable<int> value);
    partial void OnPointsChanged();
    #endregion
	
	public lc_Recommendation()
	{
		this._lc_Product = default(EntityRef<lc_Product>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecommendationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int RecommendationID
	{
		get
		{
			return this._RecommendationID;
		}
		set
		{
			if ((this._RecommendationID != value))
			{
				this.OnRecommendationIDChanging(value);
				this.SendPropertyChanging();
				this._RecommendationID = value;
				this.SendPropertyChanged("RecommendationID");
				this.OnRecommendationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int")]
	public System.Nullable<int> ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._lc_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit")]
	public System.Nullable<bool> Approved
	{
		get
		{
			return this._Approved;
		}
		set
		{
			if ((this._Approved != value))
			{
				this.OnApprovedChanging(value);
				this.SendPropertyChanging();
				this._Approved = value;
				this.SendPropertyChanged("Approved");
				this.OnApprovedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInserted", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> DateInserted
	{
		get
		{
			return this._DateInserted;
		}
		set
		{
			if ((this._DateInserted != value))
			{
				this.OnDateInsertedChanging(value);
				this.SendPropertyChanging();
				this._DateInserted = value;
				this.SendPropertyChanged("DateInserted");
				this.OnDateInsertedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points", DbType="Int")]
	public System.Nullable<int> Points
	{
		get
		{
			return this._Points;
		}
		set
		{
			if ((this._Points != value))
			{
				this.OnPointsChanging(value);
				this.SendPropertyChanging();
				this._Points = value;
				this.SendPropertyChanged("Points");
				this.OnPointsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Product_lc_Recommendation", Storage="_lc_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
	public lc_Product lc_Product
	{
		get
		{
			return this._lc_Product.Entity;
		}
		set
		{
			lc_Product previousValue = this._lc_Product.Entity;
			if (((previousValue != value) 
						|| (this._lc_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._lc_Product.Entity = null;
					previousValue.lc_Recommendations.Remove(this);
				}
				this._lc_Product.Entity = value;
				if ((value != null))
				{
					value.lc_Recommendations.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(Nullable<int>);
				}
				this.SendPropertyChanged("lc_Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_RegionShippingTable")]
public partial class lc_RegionShippingTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _RegionID;
	
	private string _Name;
	
	private double _ShippingCost;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegionIDChanging(int value);
    partial void OnRegionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShippingCostChanging(double value);
    partial void OnShippingCostChanged();
    #endregion
	
	public lc_RegionShippingTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int RegionID
	{
		get
		{
			return this._RegionID;
		}
		set
		{
			if ((this._RegionID != value))
			{
				this.OnRegionIDChanging(value);
				this.SendPropertyChanging();
				this._RegionID = value;
				this.SendPropertyChanged("RegionID");
				this.OnRegionIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCost", DbType="Float NOT NULL")]
	public double ShippingCost
	{
		get
		{
			return this._ShippingCost;
		}
		set
		{
			if ((this._ShippingCost != value))
			{
				this.OnShippingCostChanging(value);
				this.SendPropertyChanging();
				this._ShippingCost = value;
				this.SendPropertyChanged("ShippingCost");
				this.OnShippingCostChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_SellerTable")]
public partial class lc_SellerTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SellerID;
	
	private string _SellerName;
	
	private string _Address;
	
	private string _Address2;
	
	private string _City;
	
	private string _State;
	
	private string _Zip;
	
	private string _Country;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSellerIDChanging(int value);
    partial void OnSellerIDChanged();
    partial void OnSellerNameChanging(string value);
    partial void OnSellerNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    #endregion
	
	public lc_SellerTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SellerID
	{
		get
		{
			return this._SellerID;
		}
		set
		{
			if ((this._SellerID != value))
			{
				this.OnSellerIDChanging(value);
				this.SendPropertyChanging();
				this._SellerID = value;
				this.SendPropertyChanged("SellerID");
				this.OnSellerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string SellerName
	{
		get
		{
			return this._SellerName;
		}
		set
		{
			if ((this._SellerName != value))
			{
				this.OnSellerNameChanging(value);
				this.SendPropertyChanging();
				this._SellerName = value;
				this.SendPropertyChanged("SellerName");
				this.OnSellerNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(50)")]
	public string Address2
	{
		get
		{
			return this._Address2;
		}
		set
		{
			if ((this._Address2 != value))
			{
				this.OnAddress2Changing(value);
				this.SendPropertyChanging();
				this._Address2 = value;
				this.SendPropertyChanged("Address2");
				this.OnAddress2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string State
	{
		get
		{
			return this._State;
		}
		set
		{
			if ((this._State != value))
			{
				this.OnStateChanging(value);
				this.SendPropertyChanging();
				this._State = value;
				this.SendPropertyChanged("State");
				this.OnStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string Zip
	{
		get
		{
			return this._Zip;
		}
		set
		{
			if ((this._Zip != value))
			{
				this.OnZipChanging(value);
				this.SendPropertyChanging();
				this._Zip = value;
				this.SendPropertyChanged("Zip");
				this.OnZipChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Country
	{
		get
		{
			return this._Country;
		}
		set
		{
			if ((this._Country != value))
			{
				this.OnCountryChanging(value);
				this.SendPropertyChanging();
				this._Country = value;
				this.SendPropertyChanged("Country");
				this.OnCountryChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_ShippingInfoTable")]
public partial class lc_ShippingInfoTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _OrderID;
	
	private string _FirstName;
	
	private string _LastName;
	
	private string _MiddleName;
	
	private string _NickName;
	
	private string _Prefix;
	
	private string _Address;
	
	private string _Address2;
	
	private string _City;
	
	private string _State;
	
	private string _Zip;
	
	private string _Phone;
	
	private string _Fax;
	
	private string _Country;
	
	private EntityRef<lc_Order> _lc_Order;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnPrefixChanging(string value);
    partial void OnPrefixChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    #endregion
	
	public lc_ShippingInfoTable()
	{
		this._lc_Order = default(EntityRef<lc_Order>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int OrderID
	{
		get
		{
			return this._OrderID;
		}
		set
		{
			if ((this._OrderID != value))
			{
				if (this._lc_Order.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnOrderIDChanging(value);
				this.SendPropertyChanging();
				this._OrderID = value;
				this.SendPropertyChanged("OrderID");
				this.OnOrderIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)")]
	public string MiddleName
	{
		get
		{
			return this._MiddleName;
		}
		set
		{
			if ((this._MiddleName != value))
			{
				this.OnMiddleNameChanging(value);
				this.SendPropertyChanging();
				this._MiddleName = value;
				this.SendPropertyChanged("MiddleName");
				this.OnMiddleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="NVarChar(50)")]
	public string NickName
	{
		get
		{
			return this._NickName;
		}
		set
		{
			if ((this._NickName != value))
			{
				this.OnNickNameChanging(value);
				this.SendPropertyChanging();
				this._NickName = value;
				this.SendPropertyChanged("NickName");
				this.OnNickNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefix", DbType="Char(6)")]
	public string Prefix
	{
		get
		{
			return this._Prefix;
		}
		set
		{
			if ((this._Prefix != value))
			{
				this.OnPrefixChanging(value);
				this.SendPropertyChanging();
				this._Prefix = value;
				this.SendPropertyChanged("Prefix");
				this.OnPrefixChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(50)")]
	public string Address2
	{
		get
		{
			return this._Address2;
		}
		set
		{
			if ((this._Address2 != value))
			{
				this.OnAddress2Changing(value);
				this.SendPropertyChanging();
				this._Address2 = value;
				this.SendPropertyChanged("Address2");
				this.OnAddress2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(2)")]
	public string State
	{
		get
		{
			return this._State;
		}
		set
		{
			if ((this._State != value))
			{
				this.OnStateChanging(value);
				this.SendPropertyChanging();
				this._State = value;
				this.SendPropertyChanged("State");
				this.OnStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NChar(15)")]
	public string Zip
	{
		get
		{
			return this._Zip;
		}
		set
		{
			if ((this._Zip != value))
			{
				this.OnZipChanging(value);
				this.SendPropertyChanging();
				this._Zip = value;
				this.SendPropertyChanged("Zip");
				this.OnZipChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(30)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(30)")]
	public string Fax
	{
		get
		{
			return this._Fax;
		}
		set
		{
			if ((this._Fax != value))
			{
				this.OnFaxChanging(value);
				this.SendPropertyChanging();
				this._Fax = value;
				this.SendPropertyChanged("Fax");
				this.OnFaxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Country
	{
		get
		{
			return this._Country;
		}
		set
		{
			if ((this._Country != value))
			{
				this.OnCountryChanging(value);
				this.SendPropertyChanging();
				this._Country = value;
				this.SendPropertyChanged("Country");
				this.OnCountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Order_lc_ShippingInfoTable", Storage="_lc_Order", ThisKey="OrderID", OtherKey="OrderID", IsForeignKey=true)]
	public lc_Order lc_Order
	{
		get
		{
			return this._lc_Order.Entity;
		}
		set
		{
			lc_Order previousValue = this._lc_Order.Entity;
			if (((previousValue != value) 
						|| (this._lc_Order.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._lc_Order.Entity = null;
					previousValue.lc_ShippingInfoTable = null;
				}
				this._lc_Order.Entity = value;
				if ((value != null))
				{
					value.lc_ShippingInfoTable = this;
					this._OrderID = value.OrderID;
				}
				else
				{
					this._OrderID = default(int);
				}
				this.SendPropertyChanged("lc_Order");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_ShippingRegion")]
public partial class lc_ShippingRegion : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ShippingRegionID;
	
	private string _ShippingRegion;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShippingRegionIDChanging(int value);
    partial void OnShippingRegionIDChanged();
    partial void OnShippingRegionChanging(string value);
    partial void OnShippingRegionChanged();
    #endregion
	
	public lc_ShippingRegion()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingRegionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ShippingRegionID
	{
		get
		{
			return this._ShippingRegionID;
		}
		set
		{
			if ((this._ShippingRegionID != value))
			{
				this.OnShippingRegionIDChanging(value);
				this.SendPropertyChanging();
				this._ShippingRegionID = value;
				this.SendPropertyChanged("ShippingRegionID");
				this.OnShippingRegionIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingRegion", DbType="VarChar(1000)")]
	public string ShippingRegion
	{
		get
		{
			return this._ShippingRegion;
		}
		set
		{
			if ((this._ShippingRegion != value))
			{
				this.OnShippingRegionChanging(value);
				this.SendPropertyChanging();
				this._ShippingRegion = value;
				this.SendPropertyChanged("ShippingRegion");
				this.OnShippingRegionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_SizeTable")]
public partial class lc_SizeTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SizeID;
	
	private string _Size;
	
	private EntitySet<lc_WishList> _lc_WishLists;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSizeIDChanging(int value);
    partial void OnSizeIDChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    #endregion
	
	public lc_SizeTable()
	{
		this._lc_WishLists = new EntitySet<lc_WishList>(new Action<lc_WishList>(this.attach_lc_WishLists), new Action<lc_WishList>(this.detach_lc_WishLists));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SizeID
	{
		get
		{
			return this._SizeID;
		}
		set
		{
			if ((this._SizeID != value))
			{
				this.OnSizeIDChanging(value);
				this.SendPropertyChanging();
				this._SizeID = value;
				this.SendPropertyChanged("SizeID");
				this.OnSizeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Size
	{
		get
		{
			return this._Size;
		}
		set
		{
			if ((this._Size != value))
			{
				this.OnSizeChanging(value);
				this.SendPropertyChanging();
				this._Size = value;
				this.SendPropertyChanged("Size");
				this.OnSizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_SizeTable_lc_WishList", Storage="_lc_WishLists", ThisKey="SizeID", OtherKey="SizeID")]
	public EntitySet<lc_WishList> lc_WishLists
	{
		get
		{
			return this._lc_WishLists;
		}
		set
		{
			this._lc_WishLists.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_lc_WishLists(lc_WishList entity)
	{
		this.SendPropertyChanging();
		entity.lc_SizeTable = this;
	}
	
	private void detach_lc_WishLists(lc_WishList entity)
	{
		this.SendPropertyChanging();
		entity.lc_SizeTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_StateTaxTable")]
public partial class lc_StateTaxTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _StateTaxTableID;
	
	private string _Name;
	
	private double _TaxPercent;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateTaxTableIDChanging(int value);
    partial void OnStateTaxTableIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTaxPercentChanging(double value);
    partial void OnTaxPercentChanged();
    #endregion
	
	public lc_StateTaxTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateTaxTableID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int StateTaxTableID
	{
		get
		{
			return this._StateTaxTableID;
		}
		set
		{
			if ((this._StateTaxTableID != value))
			{
				this.OnStateTaxTableIDChanging(value);
				this.SendPropertyChanging();
				this._StateTaxTableID = value;
				this.SendPropertyChanged("StateTaxTableID");
				this.OnStateTaxTableIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxPercent", DbType="Float NOT NULL")]
	public double TaxPercent
	{
		get
		{
			return this._TaxPercent;
		}
		set
		{
			if ((this._TaxPercent != value))
			{
				this.OnTaxPercentChanging(value);
				this.SendPropertyChanging();
				this._TaxPercent = value;
				this.SendPropertyChanged("TaxPercent");
				this.OnTaxPercentChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_DigitalProduct")]
public partial class lc_DigitalProduct : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _DigitalProductID;
	
	private int _ProductID;
	
	private string _URL;
	
	private EntityRef<lc_Product> _lc_Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDigitalProductIDChanging(int value);
    partial void OnDigitalProductIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    #endregion
	
	public lc_DigitalProduct()
	{
		this._lc_Product = default(EntityRef<lc_Product>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DigitalProductID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int DigitalProductID
	{
		get
		{
			return this._DigitalProductID;
		}
		set
		{
			if ((this._DigitalProductID != value))
			{
				this.OnDigitalProductIDChanging(value);
				this.SendPropertyChanging();
				this._DigitalProductID = value;
				this.SendPropertyChanged("DigitalProductID");
				this.OnDigitalProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._lc_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string URL
	{
		get
		{
			return this._URL;
		}
		set
		{
			if ((this._URL != value))
			{
				this.OnURLChanging(value);
				this.SendPropertyChanging();
				this._URL = value;
				this.SendPropertyChanged("URL");
				this.OnURLChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Product_lc_DigitalProduct", Storage="_lc_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public lc_Product lc_Product
	{
		get
		{
			return this._lc_Product.Entity;
		}
		set
		{
			lc_Product previousValue = this._lc_Product.Entity;
			if (((previousValue != value) 
						|| (this._lc_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._lc_Product.Entity = null;
					previousValue.lc_DigitalProducts.Remove(this);
				}
				this._lc_Product.Entity = value;
				if ((value != null))
				{
					value.lc_DigitalProducts.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("lc_Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_Country")]
public partial class lc_Country : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CountryID;
	
	private System.Guid _CountryGUID;
	
	private string _Name;
	
	private string _TwoCharCode;
	
	private string _ThreeCharCode;
	
	private string _NumCode;
	
	private bool _ShipTo;
	
	private byte _Published;
	
	private int _DisplayOrder;
	
	private System.DateTime _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnCountryGUIDChanging(System.Guid value);
    partial void OnCountryGUIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTwoCharCodeChanging(string value);
    partial void OnTwoCharCodeChanged();
    partial void OnThreeCharCodeChanging(string value);
    partial void OnThreeCharCodeChanged();
    partial void OnNumCodeChanging(string value);
    partial void OnNumCodeChanged();
    partial void OnShipToChanging(bool value);
    partial void OnShipToChanged();
    partial void OnPublishedChanging(byte value);
    partial void OnPublishedChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public lc_Country()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CountryID
	{
		get
		{
			return this._CountryID;
		}
		set
		{
			if ((this._CountryID != value))
			{
				this.OnCountryIDChanging(value);
				this.SendPropertyChanging();
				this._CountryID = value;
				this.SendPropertyChanged("CountryID");
				this.OnCountryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryGUID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid CountryGUID
	{
		get
		{
			return this._CountryGUID;
		}
		set
		{
			if ((this._CountryGUID != value))
			{
				this.OnCountryGUIDChanging(value);
				this.SendPropertyChanging();
				this._CountryGUID = value;
				this.SendPropertyChanged("CountryGUID");
				this.OnCountryGUIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoCharCode", DbType="NVarChar(2)")]
	public string TwoCharCode
	{
		get
		{
			return this._TwoCharCode;
		}
		set
		{
			if ((this._TwoCharCode != value))
			{
				this.OnTwoCharCodeChanging(value);
				this.SendPropertyChanging();
				this._TwoCharCode = value;
				this.SendPropertyChanged("TwoCharCode");
				this.OnTwoCharCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreeCharCode", DbType="NVarChar(3)")]
	public string ThreeCharCode
	{
		get
		{
			return this._ThreeCharCode;
		}
		set
		{
			if ((this._ThreeCharCode != value))
			{
				this.OnThreeCharCodeChanging(value);
				this.SendPropertyChanging();
				this._ThreeCharCode = value;
				this.SendPropertyChanged("ThreeCharCode");
				this.OnThreeCharCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCode", DbType="NVarChar(3)")]
	public string NumCode
	{
		get
		{
			return this._NumCode;
		}
		set
		{
			if ((this._NumCode != value))
			{
				this.OnNumCodeChanging(value);
				this.SendPropertyChanging();
				this._NumCode = value;
				this.SendPropertyChanged("NumCode");
				this.OnNumCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipTo", DbType="Bit NOT NULL")]
	public bool ShipTo
	{
		get
		{
			return this._ShipTo;
		}
		set
		{
			if ((this._ShipTo != value))
			{
				this.OnShipToChanging(value);
				this.SendPropertyChanging();
				this._ShipTo = value;
				this.SendPropertyChanged("ShipTo");
				this.OnShipToChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Published", DbType="TinyInt NOT NULL")]
	public byte Published
	{
		get
		{
			return this._Published;
		}
		set
		{
			if ((this._Published != value))
			{
				this.OnPublishedChanging(value);
				this.SendPropertyChanging();
				this._Published = value;
				this.SendPropertyChanged("Published");
				this.OnPublishedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
	public int DisplayOrder
	{
		get
		{
			return this._DisplayOrder;
		}
		set
		{
			if ((this._DisplayOrder != value))
			{
				this.OnDisplayOrderChanging(value);
				this.SendPropertyChanging();
				this._DisplayOrder = value;
				this.SendPropertyChanged("DisplayOrder");
				this.OnDisplayOrderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_State")]
public partial class lc_State : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _StateID;
	
	private string _Name;
	
	private System.Nullable<int> _CountryID;
	
	private string _Abbreviation;
	
	private byte _Published;
	
	private int _DisplayOrder;
	
	private System.DateTime _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    partial void OnAbbreviationChanging(string value);
    partial void OnAbbreviationChanged();
    partial void OnPublishedChanging(byte value);
    partial void OnPublishedChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public lc_State()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int StateID
	{
		get
		{
			return this._StateID;
		}
		set
		{
			if ((this._StateID != value))
			{
				this.OnStateIDChanging(value);
				this.SendPropertyChanging();
				this._StateID = value;
				this.SendPropertyChanged("StateID");
				this.OnStateIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
	public System.Nullable<int> CountryID
	{
		get
		{
			return this._CountryID;
		}
		set
		{
			if ((this._CountryID != value))
			{
				this.OnCountryIDChanging(value);
				this.SendPropertyChanging();
				this._CountryID = value;
				this.SendPropertyChanged("CountryID");
				this.OnCountryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbreviation", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
	public string Abbreviation
	{
		get
		{
			return this._Abbreviation;
		}
		set
		{
			if ((this._Abbreviation != value))
			{
				this.OnAbbreviationChanging(value);
				this.SendPropertyChanging();
				this._Abbreviation = value;
				this.SendPropertyChanged("Abbreviation");
				this.OnAbbreviationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Published", DbType="TinyInt NOT NULL")]
	public byte Published
	{
		get
		{
			return this._Published;
		}
		set
		{
			if ((this._Published != value))
			{
				this.OnPublishedChanging(value);
				this.SendPropertyChanging();
				this._Published = value;
				this.SendPropertyChanged("Published");
				this.OnPublishedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
	public int DisplayOrder
	{
		get
		{
			return this._DisplayOrder;
		}
		set
		{
			if ((this._DisplayOrder != value))
			{
				this.OnDisplayOrderChanging(value);
				this.SendPropertyChanging();
				this._DisplayOrder = value;
				this.SendPropertyChanged("DisplayOrder");
				this.OnDisplayOrderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lc_ShoppingCart")]
public partial class lc_ShoppingCart : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _CartID;
	
	private int _ProductID;
	
	private int _Quantity;
	
	private System.DateTime _DateAdded;
	
	private decimal _Price;
	
	private int _SizeID;
	
	private int _ColorID;
	
	private EntityRef<lc_Product> _lc_Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCartIDChanging(string value);
    partial void OnCartIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnSizeIDChanging(int value);
    partial void OnSizeIDChanged();
    partial void OnColorIDChanging(int value);
    partial void OnColorIDChanged();
    #endregion
	
	public lc_ShoppingCart()
	{
		this._lc_Product = default(EntityRef<lc_Product>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CartID", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string CartID
	{
		get
		{
			return this._CartID;
		}
		set
		{
			if ((this._CartID != value))
			{
				this.OnCartIDChanging(value);
				this.SendPropertyChanging();
				this._CartID = value;
				this.SendPropertyChanged("CartID");
				this.OnCartIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._lc_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
	public int Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="SmallDateTime NOT NULL")]
	public System.DateTime DateAdded
	{
		get
		{
			return this._DateAdded;
		}
		set
		{
			if ((this._DateAdded != value))
			{
				this.OnDateAddedChanging(value);
				this.SendPropertyChanging();
				this._DateAdded = value;
				this.SendPropertyChanged("DateAdded");
				this.OnDateAddedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeID", IsPrimaryKey=true)]
	public int SizeID
	{
		get
		{
			return this._SizeID;
		}
		set
		{
			if ((this._SizeID != value))
			{
				this.OnSizeIDChanging(value);
				this.SendPropertyChanging();
				this._SizeID = value;
				this.SendPropertyChanged("SizeID");
				this.OnSizeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorID", IsPrimaryKey=true)]
	public int ColorID
	{
		get
		{
			return this._ColorID;
		}
		set
		{
			if ((this._ColorID != value))
			{
				this.OnColorIDChanging(value);
				this.SendPropertyChanging();
				this._ColorID = value;
				this.SendPropertyChanged("ColorID");
				this.OnColorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lc_Product_lc_ShoppingCart", Storage="_lc_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public lc_Product lc_Product
	{
		get
		{
			return this._lc_Product.Entity;
		}
		set
		{
			lc_Product previousValue = this._lc_Product.Entity;
			if (((previousValue != value) 
						|| (this._lc_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._lc_Product.Entity = null;
					previousValue.lc_ShoppingCarts.Remove(this);
				}
				this._lc_Product.Entity = value;
				if ((value != null))
				{
					value.lc_ShoppingCarts.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("lc_Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class GetAllProductsInCategoryResult
{
	
	private int _ProductID;
	
	private string _Name;
	
	private string _Description;
	
	private decimal _Price;
	
	private string _Image1FileName;
	
	private string _Image2FileName;
	
	private bool _OnCatalogPromotion;
	
	private bool _OnDepartmentPromotion;
	
	public GetAllProductsInCategoryResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				this._ProductID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image1FileName", DbType="NVarChar(100)")]
	public string Image1FileName
	{
		get
		{
			return this._Image1FileName;
		}
		set
		{
			if ((this._Image1FileName != value))
			{
				this._Image1FileName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image2FileName", DbType="NVarChar(100)")]
	public string Image2FileName
	{
		get
		{
			return this._Image2FileName;
		}
		set
		{
			if ((this._Image2FileName != value))
			{
				this._Image2FileName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnCatalogPromotion", DbType="Bit NOT NULL")]
	public bool OnCatalogPromotion
	{
		get
		{
			return this._OnCatalogPromotion;
		}
		set
		{
			if ((this._OnCatalogPromotion != value))
			{
				this._OnCatalogPromotion = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnDepartmentPromotion", DbType="Bit NOT NULL")]
	public bool OnDepartmentPromotion
	{
		get
		{
			return this._OnDepartmentPromotion;
		}
		set
		{
			if ((this._OnDepartmentPromotion != value))
			{
				this._OnDepartmentPromotion = value;
			}
		}
	}
}

public partial class GetProductRecommendationsResult
{
	
	private int _ProductID;
	
	private string _Name;
	
	private string _Image1FileName;
	
	private decimal _Price;
	
	private string _Description;
	
	public GetProductRecommendationsResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				this._ProductID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image1FileName", DbType="NVarChar(100)")]
	public string Image1FileName
	{
		get
		{
			return this._Image1FileName;
		}
		set
		{
			if ((this._Image1FileName != value))
			{
				this._Image1FileName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(5003)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
}
#pragma warning restore 1591
